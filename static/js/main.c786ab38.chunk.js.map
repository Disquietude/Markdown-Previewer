{"version":3,"sources":["js/redux/actions/types.js","js/components/Editor/Editor.js","js/redux/actions/changeInput.js","js/components/Divider/Divider.js","js/redux/actions/changeEditorWidth.js","js/components/Preview/Preview.js","js/redux/reducers/inputReducer.js","js/redux/reducers/editorWidthReducer.js","js/redux/reducers/index.js","js/redux/store.js","js/components/App.js","serviceWorker.js","index.js"],"names":["CHANGE_INPUT","CHANGE_EDITOR_WIDTH","Editor","_this","this","react_default","a","createElement","className","style","width","props","id","value","input","onChange","e","changeInput","target","Component","connect","state","editorWidth","dispatch","type","Divider","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","mouseX","handleMouseDown","bind","assertThisInitialized","resizeEditor","setState","clientX","document","onmousemove","onmouseup","stopResize","preventDefault","newWidth","window","outerWidth","changeEditorWidth","_this2","onMouseDown","index_es","icon","dangerouslySetInnerHTML","__html","marked","breaks","inputReducer","arguments","length","undefined","action","initialState","combineReducers","store","createStore","rootReducer","App","es","components_Editor_Editor","components_Divider_Divider","components_Preview_Preview","Boolean","location","hostname","match","library","add","faEllipsisV","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c786ab38.chunk.js","sourcesContent":["export const CHANGE_INPUT = \"CHANGE_INPUT\";\r\nexport const CHANGE_EDITOR_WIDTH = \"CHANGE_EDITOR_WIDTH\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport changeInput from '../../redux/actions/changeInput';\r\n\r\nclass Editor extends Component {\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"Editor\"\r\n        style={{\r\n          width: this.props.width\r\n        }}\r\n      >\r\n        <div className=\"Editor__header\">\r\n          <h1 className=\"Editor__title\">Editor</h1>\r\n        </div>\r\n        <div className=\"Editor__content\">\r\n          <textarea \r\n            className=\"Editor__textarea\"\r\n            id=\"editor\"\r\n            value={this.props.input}\r\n            onChange={(e) => (this.props.changeInput(e.target.value))}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.input,\r\n  width: state.editorWidth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeInput: (input) => dispatch(changeInput(input))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);","import { CHANGE_INPUT } from './types';\r\n\r\nexport default function changeInput(input) {\r\n  return {\r\n    type: CHANGE_INPUT,\r\n    input: input\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport changeEditorWidth from '../../redux/actions/changeEditorWidth';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\n// const Divider = () => (\r\n//   <div className=\"Divider\">\r\n//     <FontAwesomeIcon icon=\"ellipsis-v\"/>\r\n//     <FontAwesomeIcon icon=\"ellipsis-v\"/>\r\n//   </div>\r\n// );\r\n\r\n// export default Divider;\r\n\r\nclass Divider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mouseX: 0\r\n    }\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.resizeEditor = this.resizeEditor.bind(this);\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.setState({\r\n      mouseX: e.clientX\r\n    });\r\n    document.onmousemove = this.resizeEditor;\r\n    document.onmouseup = this.stopResize;\r\n  }\r\n\r\n  resizeEditor(e) {\r\n    e.preventDefault();\r\n    let newWidth = this.props.editorWidth - (this.state.mouseX - e.clientX);\r\n    if (newWidth < 0.2 * window.outerWidth) {\r\n      newWidth = 0.2 * window.outerWidth;\r\n    }\r\n    else if (newWidth > 0.8 * window.outerWidth) {\r\n      newWidth = 0.8 * window.outerWidth;\r\n    }\r\n    this.props.changeEditorWidth(newWidth);\r\n    this.setState({\r\n      mouseX: e.clientX\r\n    });\r\n  }\r\n\r\n  stopResize(e) {\r\n    document.onmousemove = null;\r\n    document.onmouseup = null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"Divider\"\r\n        onMouseDown={(e) => this.handleMouseDown(e)}\r\n      >\r\n        <FontAwesomeIcon icon=\"ellipsis-v\"/>\r\n        <FontAwesomeIcon icon=\"ellipsis-v\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  editorWidth: state.editorWidth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeEditorWidth: (width) => dispatch(changeEditorWidth(width))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Divider);","import { CHANGE_EDITOR_WIDTH } from './types';\r\n\r\nexport default function changeEditorWidth(width) {\r\n  return {\r\n    type: CHANGE_EDITOR_WIDTH,\r\n    width: width\r\n  };\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport marked from 'marked';\r\n\r\nconst Preview = (props) => (\r\n  <div className=\"Preview\" style={{width: props.width}}>\r\n    <div className=\"Preview__header\">\r\n      <h1 className=\"Preview__title\">Preview</h1>\r\n    </div>\r\n    <div \r\n      className=\"Preview__content\"\r\n      id=\"preview\"\r\n      dangerouslySetInnerHTML={\r\n        {__html: marked(props.input, {breaks: true})}\r\n      } \r\n    >\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.input,\r\n  width: window.outerWidth - (state.editorWidth + 5)\r\n})\r\n\r\nexport default connect(mapStateToProps)(Preview);","import { CHANGE_INPUT } from '../actions/types';\r\n\r\nconst initialState = `\r\n  # Markdown Previewer\r\n  Type Markdown into the 'Editor' to see it rendered in the 'Preview'.\r\n\r\n  ## Markdown Sample\r\n  Excerpts taken from Kyle Simpson's [You Don't Know JS](https://github.com/getify/You-Dont-Know-JS).\r\n\r\n  > Any sufficiently *advanced* technology is indistinguishable from magic. -- Arthur C. Clarke\r\n\r\n  1. **Tokenizing/Lexing:** breaking up a string of characters into meaningful (to the language) chunks, called tokens. For instance, consider the program: \\`var a = 2;\\`. This program would likely be broken up into the following tokens: \\`var\\`, \\`a\\`, \\`=\\`, \\`2\\`, and \\`;\\`. Whitespace may or may not be persisted as a token, depending on whether it's meaningful or not.\r\n\r\n  \\`\\`\\`javascript\r\n  function foo(a) {\r\n          console.log( a ); // 2\r\n  }\r\n\r\n  foo( 2 );\r\n  \\`\\`\\`\r\n\r\n  ![lexical scope](https://github.com/getify/You-Dont-Know-JS/blob/master/scope%20&%20closures/fig1.png?raw=true)\r\n\r\n`;\r\n\r\nlet inputReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CHANGE_INPUT:\r\n      return action.input;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default inputReducer;","import { CHANGE_EDITOR_WIDTH } from '../actions/types';\r\n\r\nconst initialState = (window.outerWidth - 5)/2;\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_EDITOR_WIDTH:\r\n      return action.width;\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from \"redux\";\r\nimport inputReducer from './inputReducer';\r\nimport editorWidthReducer from './editorWidthReducer';\r\n\r\nexport default combineReducers({\r\n  input: inputReducer,\r\n  editorWidth: editorWidthReducer\r\n});","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Editor from './Editor/Editor';\r\nimport Divider from './Divider/Divider';\r\nimport Preview from './Preview/Preview';\r\n\r\nimport store from '../redux/store';\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <Editor />\r\n      <Divider />\r\n      <Preview />\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/styles.sass';\nimport App from './js/components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faEllipsisV);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}